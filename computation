一. 数 组 与 数 值 运 算 :

                    
    <1> a - 1 = a - np.full_like(a,1)

        矩 阵 级 运 算  (整 体) 


    <2> a1 - a2 

        数组间运算会自动找到对应的位置进行运算


二. 函 数 运 算 :


    参 数 axis = 0 第一维度上 所有元素 一一对应 计算

          axis = 1 第二维度上 所有元素 一一对应 计算

          axis = 2 第三维度上 所有元素 一一对应 计算

    axis 参 数 以下函数均可使用


    <1> np.sqrt(obj)

        求 obj 的平方根

        np.sqrt(obj) = obj ** 0.5


    <2> np.log2(obj)

        求 obj 以2为底的 对数 (通俗说 2的多少次方 = obj)

        2 是底数 , obj 是真数

        底数的 对数次方 = 真数


    <3> np.sign(obj)

        求 obj 每个元素的 正负号

        正 为 1 , 负 为 -1


    <4> np.abs(obj)

        求 obj 的绝对值


    <5> - obj

        正 负 号 互 换   


    <6> obj.sum()

        obj.sum()


    <7> obj.cumsum()

        累 加

        本数 = 本数 + 前面每个数 (+=)
        
        obj.cumsum()

        
    <8> obj.cumprod()

        累 乘

        本数 = 本数 * 前面所有数 (*=)


    <9> np.diff(obj)

        相邻数组元素中 每两个元素的差值


   <10> obj.mean()

        计 算 平 均 数


   <11> np.median(obj)

        计 算 中 位 数


   <12> average

        加权平均值,weights加权值,不设为等权重


   <13> obj.min() 

        求 最 小 值 

   <14> obj.max()

        求 最 大 值


   <15> obj.ptp()

        求 极 差


   <16> obj.var() obj.std()

        求 方 差 , 标 准 差


   <17> obj.argmax()

        把 obj 一维扁平化后的 找到最大值的 索引位置

   <18> obj.argmin()

        把 obj 一维扁平化后的 找到最小值的 索引位置



三. 矩 阵 np.dot(obj)


    条 件 : A .dot (B)  A 的列 = B 的行

    总结 : 结果的每一个元素,是用a在行上的元素,每每乘以b在该列上的元素,
        
           再做加法,得到一个数字

    <1> np.dot(a,b)

    <2> a.dot(b)

    同一时间,只能做两个的矩阵的运算,三个则是:
    
        a.dot(b).dot(c)    np.dot(a,b).dot(c)


四. 单 位 矩 阵 :

    
    对 角 线 上 的 数 字 全 部 都 是 1 , 其 余 都 是 0 .

    矩阵 A * 单位矩阵(I) = 矩阵 A
